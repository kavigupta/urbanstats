USS DocumentationUrban Stats Script (USS)Urban Stats Script (USS) is a scripting language for describing operations on data. It is designed to allow users to describe programs as if they refer to a single row of data, while simultaneously allowing global operations like regression.The basic syntax of USS should be familiar to any programmer. Arithmetic operations are written as you would expect. Feel free to edit the code below to see how the result changes:x = 2 ** 3 + 3 * 4
y = x + 2
y
22A full list of operators is available here.ListsThe language also supports lists, which are denoted by square brackets. You can use operators on these as well:x = [1, 2, 3]
y = x + [4, 5, 6]
y
[
    5,
    7,
    9
]For details on broadcasting, see the broadcasting section.ObjectsThe language also supports objects, which are denoted by curly braces. You can use operators on these as well:x = {a: 1, b: 2}
y = x.a + x.b
y
3Opaque TypesUSS has several opaque types, which are types that you can only interact with via functions. For example, colors are opaque types, and you can only create them using functions like rgb(), hsv(), or one of the predefined colors.x = rgb(0, 0, 1)
y = hsv(0, 1, 1)
[x, y, colorRed]
[
    rgb(0, 0, 1),
    rgb(1, 0, 0),
    rgb(0.9764705882352941, 0.42745098039215684, 0.42745098039215684)
]And you can only interact with them using functions like renderColor() or in other contexts that use color objects.x = rgb(0, 0, 1)
y = hsv(0, 1, 1)
renderColor([x, y, colorRed])
[
    "#0000ff",
    "#ff0000",
    "#f96d6d"
]RegressionsUSS supports linear regression via the regress(y, x1, x2, ..., weight) function, which returns an object with several properties:b: The intercept of the regression line.m1, m2, m3...: The coefficients for each independent variable.r2: The R-squared value of the regression.residuals: The residuals of the regression.For example, to perform a regression of y on x1 and x2, with the last point weighted more heavily, you could do:x1 = [1, 2, 3, 4, 5]
x2 = [2, 3, 2, 3, 2]
y = [2.2, 2.8, 3.6, 4.5, 5.1]
w = [1, 1, 1, 1, 10]
model = regression(y=y, x1=x1, x2=x2, weight=w)
model
{
    m1: 0.7421052631578966,
    m2: 0.029824561403522812,
    m3: NaN,
    m4: NaN,
    m5: NaN,
    m6: NaN,
    m7: NaN,
    m8: NaN,
    m9: NaN,
    m10: NaN,
    r2: 0.9977620429250791,
    residuals: [
        0.064035087719307,
        -0.10789473684211259,
        -0.02017543859648585,
        0.10789473684209483,
        -0.004385964912279938
    ],
    b: 1.3342105263157507
}Note that the inputs are all named arguments and the weight is optional.AggregationUSS provides several functions for aggregating data, including mean, median, quantile, percentile, min, max, sum, and more.For example, to calculate the mean of a vector, you can do:mean([1, 2, 3, 4, 50])
12We can also weight the mean, for example:mean([1, 2, 3, 4, 50], weights=[1, 1, 1, 1, 10])
36.42857142857143The same works for median, quantile, and percentile.percentile([1, 2, 3, 4, 50], 10, weights=[1, 1, 1, 1, 10])
2On the other hand, min, max, and sum do not support weights.min([1, 2, 3, 4, 50])
1BroadcastingBroadcasting is a feature of USS that allows you to operate on lists of values.Forward BroadcastingThe main kind of broadcasting is forward broadcasting, where you can apply operations to lists of elements. For example, if you have a list of numbers and you want to add 1 to each of them, you can do:x = [1, 2, 3]
y = x + 1
y
[
    2,
    3,
    4
]This will result in a list of numbers, where each element is 1 greater than the corresponding element in the original list.This also works with function calls, for example:x = [1, 2, 3]
y = sin(x)
y
[
    0.8414709848078965,
    0.9092974268256817,
    0.1411200080598672
]Even when the list is of functions:x = [sin, cos, tan]
y = x(pi)
y
[
    1.2246467991473532e-16,
    -1,
    -1.2246467991473532e-16
]You can also apply broadcasting to objects, for example:x = [{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}]
y = x.a
y
[
    1,
    3,
    5
]And even assigning to a property:x = [{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}]
x.a = [10, 20, 30]
x
[
    {
        a: 10,
        b: 2
    },
    {
        a: 20,
        b: 4
    },
    {
        a: 30,
        b: 6
    }
]Split BroadcastingThere is also split broadcasting, which is what happens when you use an if statement. For example, in the following code, the if statement is split into two branches, one for when y is greater than 65 and one for when it is not.x = [1, 2, 3]
y = [50, 61, 70]
if (y > 65) { x = x * 10 } else { x = x + 1 }
x
[
    2,
    3,
    30
]The if statement is split into two branches, one for when y is greater than 65 and one for when it is not.Keep in mind that this is exactly two cases, rather than one for each element. Using mean() reveals this:x = [1, 2, 3]
y = [50, 61, 70]
if (y > 65) { x = mean(x) } else { x = mean(x) }
x
[
    1.5,
    1.5,
    3
]Detailed TablesAll OperatorsThe following is a list of all operators that are available in USS.OperatorTypePrecedenceDescriptionExample**Binary1000Exponentiation (power)2 ** 3 → 8, 3 ** 2 → 9*Binary900Multiplication3 * 4 → 12, 5 * 2 → 10/Binary900Division10 / 2 → 5, 15 / 3 → 5+Unary/Binary800Unary plus, Addition, String concatenation+5, 2 + 3 → 5, "hello" + "world" → "helloworld"-Unary/Binary800Unary minus, Subtraction-5, 7 - 3 → 4==Binary700Equality (works with numbers, strings, booleans, null)5 == 5 → true, "hello" == "hello" → true, true == true → true!=Binary700Inequality (works with numbers, strings, booleans, null)5 != 3 → true, "hello" != "world" → true<Binary700Less than (numbers and strings)3 < 5 → true, "abc" < "def" → true>Binary700Greater than (numbers and strings)7 > 3 → true, "xyz" > "abc" → true<=Binary700Less than or equal (numbers and strings)5 <= 5 → true, 3 <= 5 → true>=Binary700Greater than or equal (numbers and strings)5 >= 3 → true, 5 >= 5 → true!Unary650Logical NOT!true → false, !false → true&Binary600Logical ANDtrue & false → false, true & true → true|Binary500Logical ORtrue | false → true, false | false → falseConstants and FunctionsUSS provides several built-in constants and functions for mathematical operations, data visualization, and data analysis. These are organized by category below.▶Basic FunctionsBasic utility functions for type conversion and common operations.toNumberType:(any; ) -> numberConverts any primitive value to a number. Strings are parsed as numbers, booleans become 0 or 1, and numbers are returned as-is.toStringType:(any; ) -> stringConverts any primitive value (number, boolean, string, null) to its string representation.▶Color FunctionsFunctions for creating and manipulating colors using RGB, HSV, and predefined color palettes.rgbType:(number, number, number; a: number = 1) -> colorCreates a color using RGB (Red, Green, Blue) values. Each component ranges from 0 to 1, where 0 is no color and 1 is full intensity.Named Arguments:a: AlphahsvType:(number, number, number; a: number = 1) -> colorCreates a color using HSV (Hue, Saturation, Value) values. Hue ranges from 0 to 360 degrees, saturation and value range from 0 to 1.renderColorType:(color; ) -> stringConverts a color object to its hexadecimal string representation (e.g., "#ff0000" for red). If the alpha channel is not 255, it will be included in the string, e.g., "#ff000088" for red with 50% opacity.Predefined Color ConstantsBuilt-in color constants for common colors like red, blue, green, etc. Each color can be used directly in USS expressions.NameTypeDescriptioncolorBluecolorPredefined color constant representing blue.colorOrangecolorPredefined color constant representing orange.colorBrowncolorPredefined color constant representing brown.colorPurplecolorPredefined color constant representing purple.colorRedcolorPredefined color constant representing red.colorGreycolorPredefined color constant representing grey.colorDarkGreycolorPredefined color constant representing dark grey.colorPinkcolorPredefined color constant representing pink.colorYellowcolorPredefined color constant representing yellow.colorGreencolorPredefined color constant representing green.colorCyancolorPredefined color constant representing cyan.colorWhitecolorPredefined color constant representing white.colorBlackcolorPredefined color constant representing black. (default)▶Mathematical FunctionsMathematical functions for arithmetic, trigonometry, and statistical operations.infType:numberPositive infinity, a special numeric value representing an unbounded limit.piType:numberThe mathematical constant π (pi), approximately 3.14159, representing the ratio of a circle's circumference to its diameter.EType:numberThe mathematical constant e, approximately 2.71828, representing the base of the natural logarithm.NaNType:numberNot a Number, a special numeric value representing an undefined or unrepresentable numeric result.absType:(number; ) -> numberReturns the absolute value of a number (removes the negative sign).sqrtType:(number; ) -> numberReturns the square root of a number.tanType:(number; ) -> numberReturns the tangent of an angle in radians.asinType:(number; ) -> numberReturns the arcsine (inverse sine) of a number in radians.atanType:(number; ) -> numberReturns the arctangent (inverse tangent) of a number in radians.ceilType:(number; ) -> numberRounds a number up to the nearest integer.floorType:(number; ) -> numberRounds a number down to the nearest integer.roundType:(number; ) -> numberRounds a number to the nearest integer.expType:(number; ) -> numberReturns e raised to the power of the given number.signType:(number; ) -> numberReturns the sign of a number: 1 for positive, -1 for negative, 0 for zero.nanTo0Type:(number; ) -> numberConverts NaN values to 0, leaving other numbers unchanged.maximumType:(number, number; ) -> numberReturns the larger of two numbers.minimumType:(number, number; ) -> numberReturns the smaller of two numbers.sumType:([number]; ) -> numberReturns the sum of all numbers in a vector.minType:([number]; ) -> numberReturns the smallest number in a vector.maxType:([number]; ) -> numberReturns the largest number in a vector.meanType:([number]; weights: [number] = null) -> numberReturns the arithmetic mean (average) of all numbers in a vector. If weights are provided as a named argument, returns the weighted mean.medianType:([number]; weights: [number] = null) -> numberReturns the median (middle value) of all numbers in a vector. For even-length vectors, returns the average of the two middle values. If weights are provided as a named argument, returns the weighted median.quantileType:([number], number; weights: [number] = null) -> numberReturns the quantile value from a vector. Takes a quantile value (between 0 and 1) as the second argument and optional weights as a named argument.percentileType:([number], number; weights: [number] = null) -> numberReturns the percentile value from a vector. Takes a percentile value (between 0 and 100) as the second argument and optional weights as a named argument.Logarithm FunctionsMathematical functions for computing logarithms with different bases (natural, base-10, base-2).NameTypeDescriptionln(number; ) -> numberReturns the natural logarithm (base e) of a number.log10(number; ) -> numberReturns the base-10 logarithm of a number.log2(number; ) -> numberReturns the base-2 logarithm of a number.Trigonometric FunctionsMathematical functions for trigonometric calculations (sine, cosine, arccosine, etc.).NameTypeDescriptionsin(number; ) -> numberReturns the sine of an angle in radians.cos(number; ) -> numberReturns the cosine of an angle in radians.acos(number; ) -> numberReturns the arccosine (inverse cosine) of a number in radians.▶Statistical AnalysisStatistical analysis functions for linear regression.regressionType:(; y: [number], x1: [number], x2: [number] = null, x3: [number] = null, x4: [number] = null, x5: [number] = null, x6: [number] = null, x7: [number] = null, x8: [number] = null, x9: [number] = null, x10: [number] = null, weight: [number] = null, noIntercept: boolean = false) -> {b: number, m1: number, m10: number, m2: number, m3: number, m4: number, m5: number, m6: number, m7: number, m8: number, m9: number, r2: number, residuals: [number]}Performs linear regression analysis with up to 10 independent variables. Returns coefficients, residuals, R-squared value, and intercept. Supports weighted regression and optional intercept removal.▶Mapper Data VariablesThe mapper provides several variables relevant to the current universe and set of geographic features.geoNameType:[string]A vector containing the names of geographic units for the current universe. Each element represents a geographic unit (e.g., census block, county) and can be used for labeling and identification purposes in mapping and spatial analysis.geoCentroidType:[geoCentroidHandle]A vector containing geographic centroid handles for the current universe. Each element represents the center point of a geographic unit, useful for point-based visualizations and distance calculations.defaultInsetsType:insetsPredefined map inset configurations for the current universe (whatever that is). E.g., for the US, it would be the continental US, Alaska, Hawaii, Puerto Rico, and Guam.Mapper Data VariablesVariables used in the mapper.NameTypeDescriptionpopulation_us_census[number]Data from Population [US Census]population_statcan[number]Data from Population [StatCan]population_ghsl[number]Data from Population [GHS-POP]population_2010[number]Data from Population (2010)population_change_2010_2020[number]Data from Population Change (2010-2020)population_2000[number]Data from Population (2000)population_change_2000_2020[number]Data from Population Change (2000-2020)density_pw_1km_us_census[number]Data from PW Density (r=1km) [US Census]density_pw_1km_statcan[number]Data from PW Density (1km) [StatCan]density_pw_1km_ghsl[number]Data from PW Density (r=1km) [GHS-POP]density_pw_1km_2010[number]Data from PW Density (r=1km) (2010)density_pw_1km_change_2010_2020[number]Data from PW Density (r=1km) Change (2010-2020)density_pw_1km_2000[number]Data from PW Density (r=1km) (2000)density_pw_1km_change_2000_2020[number]Data from PW Density (r=1km) Change (2000-2020)density_aw_us_census[number]Data from AW Density [US Census]density_aw_statcan[number]Data from Area-weighted Density [StatCan]density_aw_ghsl[number]Data from AW Density [GHS-POP]density_aw_2010[number]Data from AW Density (2010)density_aw_2000[number]Data from AW Density (2000)area[number]Data from Areacompactness[number]Data from Compactnesshilliness[number]Data from PW Mean Hilliness (Grade)elevation[number]Data from PW Mean Elevationwhite[number]Data from White %white_2010[number]Data from White % (2010)white_2000[number]Data from White % (2000)hispanic[number]Data from Hispanic %hispanic_2010[number]Data from Hispanic % (2010)hispanic_2000[number]Data from Hispanic % (2000)black[number]Data from Black %black_2010[number]Data from Black % (2010)black_2000[number]Data from Black % (2000)asian[number]Data from Asian %asian_2010[number]Data from Asian % (2010)asian_2000[number]Data from Asian % (2000)native[number]Data from Native %native_2010[number]Data from Native % (2010)native_2000[number]Data from Native % (2000)hawaiian_pi[number]Data from Hawaiian / PI %hawaiian_pi_2010[number]Data from Hawaiian / PI % (2010)hawaiian_pi_2000[number]Data from Hawaiian / PI % (2000)other_mixed[number]Data from Other / Mixed %other_mixed_2010[number]Data from Other / Mixed % (2010)other_mixed_2000[number]Data from Other / Mixed % (2000)racial_homogeneity_2000[number]Data from Racial Homogeneity (2000) %racial_homogeneity_change_2000_2020[number]Data from Racial Homogeneity Change (2000-2020) %racial_homogeneity_2010[number]Data from Racial Homogeneity (2010) %racial_homogeneity_change_2010_2020[number]Data from Racial Homogeneity Change (2010-2020) %racial_homogeneity[number]Data from Racial Homogeneity %segregation_2000[number]Data from Segregation (2000) %segregation_change_2000_2020[number]Data from Segregation Change (2000-2020) %segregation_2010[number]Data from Segregation (2010) %segregation_change_2010_2020[number]Data from Segregation Change (2010-2020) %segregation[number]Data from Segregation %local_segregation_2000[number]Data from Mean Local Segregation (2000) %local_segregation_change_2000_2020[number]Data from Mean Local Segregation Change (2000-2020) %local_segregation_2010[number]Data from Mean Local Segregation (2010) %local_segregation_change_2010_2020[number]Data from Mean Local Segregation Change (2010-2020) %local_segregation[number]Data from Mean Local Segregation %citizen_by_birth[number]Data from Citizen by Birth %naturalized_citizen[number]Data from Citizen by Naturalization %non_citizen[number]Data from Non-citizen %foreign_born[number]Data from Born outside US %born_outside_state[number]Data from Born in us outside state %born_in_state[number]Data from Born in state of residence %english_only[number]Data from Only English at Home %spanish[number]Data from Spanish at Home %other_languages[number]Data from Other at Home %high_school_us_census[number]Data from High School %undergrad_us_census[number]Data from Undergrad %graduate_us_census[number]Data from Grad %high_school_statcan[number]Data from High school diploma [25-64] %undergrad_statcan[number]Data from Bachelor's degree [25-64] %graduate_statcan[number]Data from Graduate degree [25-64] %stem_degree[number]Data from Undergrad STEM %humanities_degree[number]Data from Undergrad Humanities %business_degree[number]Data from Undergrad Business %hs_gender_gap[number]Data from % of women with high school education - % of men with high school educationundergrad_gender_gap[number]Data from % of women with undergraduate education - % of men with undergraduate educationgraduate_gender_gap[number]Data from % of women with graduate education - % of men with graduate educationsilent_us_census[number]Data from Silent % [US Census]silent_statcan[number]Data from Silent % [StatCan]boomer_us_census[number]Data from Boomer % [US Census]boomer_statcan[number]Data from Boomer % [StatCan]gen_x_us_census[number]Data from Gen X % [US Census]gen_x_statcan[number]Data from Gen X % [StatCan]millennial_us_census[number]Data from Millennial % [US Census]millennial_statcan[number]Data from Millennial % [StatCan]gen_z_us_census[number]Data from Gen Z % [US Census]gen_z_statcan[number]Data from Gen Z % [StatCan]gen_alpha_us_census[number]Data from Gen Alpha % [US Census]gen_alpha_statcan[number]Data from Gen Alpha % [StatCan]median_household_income_usd[number]Data from Median Household Income (USD)poverty[number]Data from Poverty %low_income[number]Data from LICO-AT %household_income_under_50k_usd[number]Data from Household Income < $50k %household_income_50k_to_100k_usd[number]Data from Household Income $50k - $100k %household_income_over_100k_usd[number]Data from Household Income > $100k %income_under_50k[number]Data from Household income < C$50k %income_50k_to_100k[number]Data from Household income C$50k - C$100k %income_over_100k[number]Data from Household income > C$100k %individual_income_under_50k_usd[number]Data from Individual Income < $50k %individual_income_50k_to_100k_usd[number]Data from Individual Income $50k - $100k %individual_income_over_100k_usd[number]Data from Individual Income > $100k %individual_income_under_50k_cad[number]Data from Individual income < C$50k %individual_income_50k_to_100k_cad[number]Data from Individual income C$50k - C$100k %individual_income_over_100k_cad[number]Data from Individual income > C$100k %housing_per_adult[number]Data from Housing Units per Adulthousing_per_adult_2010[number]Data from Housing Units per Adult (2010)housing_per_adult_2000[number]Data from Housing Units per Adult (2000)vacancy_rate[number]Data from Vacancy %vacancy_rate_2010[number]Data from Vacancy % (2010)vacancy_rate_2000[number]Data from Vacancy % (2000)rent_under_20_percent[number]Data from Rent/Income < 20%rent_20_to_40_percent[number]Data from Rent/Income 20%-40%rent_over_40_percent[number]Data from Rent/Income > 40%one_br_under_750[number]Data from 1BR Rent < $750 %one_br_750_to_1500[number]Data from 1BR Rent $750 - $1500 %one_br_over_1500[number]Data from 1BR Rent > $1500 %two_br_under_750[number]Data from 2BR Rent < $750 %two_br_750_to_1500[number]Data from 2BR Rent $750 - $1500 %two_br_over_1500[number]Data from 2BR Rent > $1500 %built_pre_1970[number]Data from % units built pre-1970built_1970s[number]Data from % units built in 1970sbuilt_1980s[number]Data from % units built in 1980sbuilt_1990s[number]Data from % units built in 1990sbuilt_2000s[number]Data from % units built in 2000sbuilt_2010_plus[number]Data from % units built in 2010s+renter[number]Data from Renter %commute_car[number]Data from Commute Car %commute_bike[number]Data from Commute Bike %commute_walk[number]Data from Commute Walk %commute_transit[number]Data from Commute Transit %commute_work_from_home[number]Data from Commute Work From Home %commute_time_median_us_census[number]Data from Median Commute Time (min) [US Census]commute_time_median_statcan[number]Data from Median Commute Time (min) [StatCan]commute_time_under_15_us_census[number]Data from Commute Time < 15 min % [US Census]commute_time_under_15_statcan[number]Data from Commute Time < 15 min % [StatCan]commute_time_15_to_29_us_census[number]Data from Commute Time 15 - 29 min % [US Census]commute_time_15_to_29_statcan[number]Data from Commute Time 15 - 29 min % [StatCan]commute_time_30_to_59_us_census[number]Data from Commute Time 30 - 59 min % [US Census]commute_time_30_to_59_statcan[number]Data from Commute Time 30 - 59 min % [StatCan]commute_time_over_60_us_census[number]Data from Commute Time > 60 min % [US Census]commute_time_over_60_statcan[number]Data from Commute Time > 60 min % [StatCan]no_vehicle[number]Data from Households With no Vehicle %one_plus_vehicles[number]Data from Households With 1+ Vehicles %two_plus_vehicles[number]Data from Households With 2+ Vehicles %traffic_fatalities_per_capita[number]Data from Traffic Fatalities Per Capita Per Yearped_cyclist_fatalities_per_capita[number]Data from Pedestrian/Cyclist Fatalities Per Capita Per Yeartraffic_fatalities[number]Data from Total Traffic Fatalities In Last Decadetraffic_ped_cyclist_fatalities[number]Data from Total Pedestrian/Cyclist Fatalities In Last Decadepoor_health[number]Data from Fair or poor self-rated health status %poor_physical_health[number]Data from Physical health not good for two weeks in last year %arthritis[number]Data from Arthritis %asthma[number]Data from Current asthma %high_blood_pressure[number]Data from High blood pressure %cancer[number]Data from Cancer (excluding skin cancer) %kidney_disease[number]Data from Chronic kidney disease %copd[number]Data from COPD %heart_disease[number]Data from Coronary heart disease %diabetes[number]Data from Diagnosed diabetes %obesity[number]Data from Obesity %stroke[number]Data from Stroke %any_disability[number]Data from Disability %hearing_disability[number]Data from Hearing disability %vision_disability[number]Data from Vision disability %cognitive_disability[number]Data from Cognitive disability %mobility_disability[number]Data from Mobility disability %selfcare_disability[number]Data from Self-care disability %independent_living_disability[number]Data from Independent living disability %binge_drinking[number]Data from Binge drinking among adults %smoking[number]Data from Smoking %no_physical_activity[number]Data from No leisure-time physical activity %insufficient_sleep[number]Data from Sleeping less than 7 hours %doctor_checkup_last_year[number]Data from Attended doctor in last year %dental_visit_last_year[number]Data from Attended dentist in last year %cholesterol_screening_last_year[number]Data from Cholesterol screening in last year %life_expectancy_2019[number]Data from Life Expectancy (2019)performance_score_adj_2019[number]Data from IHME Health Performance Score (2019)pm25_pollution[number]Data from PW Mean PM2.5 Pollutionutility_gas[number]Data from Utility gas heating %electricity[number]Data from Electricity heating %bottled_tank_lp_gas[number]Data from Bottled, tank, or LP gas heating %fuel_oil_kerosene[number]Data from Fuel oil, kerosene, etc. heating %other_fuel[number]Data from Other fuel heating %no_heating[number]Data from No heating %industry_agriculture_forestry_fishing_us_census[number]Data from Agriculture, forestry, fishing and hunting % [US Census]industry_agriculture_forestry_fishing_statcan[number]Data from Agriculture, forestry, fishing and hunting % [StatCan]industry_mining_oil_gas_us_census[number]Data from Mining, quarrying, and oil and gas extraction % [US Census]industry_mining_oil_gas_statcan[number]Data from Mining, quarrying, and oil and gas extraction % [StatCan]industry_accommodation_food_us_census[number]Data from Accommodation and food services % [US Census]industry_accommodation_food_statcan[number]Data from Accommodation and food services % [StatCan]industry_arts_entertainment_us_census[number]Data from Arts, entertainment, and recreation % [US Census]industry_arts_entertainment_statcan[number]Data from Arts, entertainment, and recreation % [StatCan]industry_construction_us_census[number]Data from Construction % [US Census]industry_construction_statcan[number]Data from Construction % [StatCan]industry_education_us_census[number]Data from Educational services % [US Census]industry_education_statcan[number]Data from Educational services % [StatCan]industry_healthcare_social_us_census[number]Data from Health care and social assistance % [US Census]industry_healthcare_social_statcan[number]Data from Health care and social assistance % [StatCan]industry_finance_insurance_us_census[number]Data from Finance and insurance % [US Census]industry_finance_insurance_statcan[number]Data from Finance and insurance % [StatCan]industry_real_estate_rental_us_census[number]Data from Real estate and rental and leasing % [US Census]industry_real_estate_rental_statcan[number]Data from Real estate and rental and leasing % [StatCan]industry_information_us_census[number]Data from Information % [US Census]industry_information_statcan[number]Data from Information % [StatCan]industry_manufacturing_us_census[number]Data from Manufacturing % [US Census]industry_manufacturing_statcan[number]Data from Manufacturing % [StatCan]industry_other_services_us_census[number]Data from Other services, except public administration % [US Census]industry_other_services_statcan[number]Data from Other services, except public administration % [StatCan]industry_admin_support_waste_mgmt_us_census[number]Data from Administrative and support and waste management services % [US Census]industry_admin_support_waste_mgmt_statcan[number]Data from Administrative and support and waste management services % [StatCan]industry_management_us_census[number]Data from Management of companies and enterprises % [US Census]industry_management_statcan[number]Data from Management of companies and enterprises % [StatCan]industry_professional_scientific_technical_us_census[number]Data from Professional, scientific, and technical services % [US Census]industry_professional_scientific_technical_statcan[number]Data from Professional, scientific, and technical services % [StatCan]industry_public_admin_us_census[number]Data from Public administration % [US Census]industry_public_admin_statcan[number]Data from Public administration % [StatCan]industry_retail_trade_us_census[number]Data from Retail trade % [US Census]industry_retail_trade_statcan[number]Data from Retail trade % [StatCan]industry_transportation_warehousing_us_census[number]Data from Transportation and warehousing % [US Census]industry_transportation_warehousing_statcan[number]Data from Transportation and warehousing % [StatCan]industry_utilities_us_census[number]Data from Utilities % [US Census]industry_utilities_statcan[number]Data from Utilities % [StatCan]industry_wholesale_trade_us_census[number]Data from Wholesale trade % [US Census]industry_wholesale_trade_statcan[number]Data from Wholesale trade % [StatCan]occupation_architects_engineers[number]Data from Architecture and engineering occupations %occupation_computer_math[number]Data from Computer and mathematical occupations %occupation_scientists[number]Data from Life, physical, and social science occupations %occupation_arts_media[number]Data from Arts, design, entertainment, sports, and media occupations %occupation_social_service[number]Data from Community and social service occupations %occupation_education[number]Data from Educational instruction, and library occupations %occupation_legal[number]Data from Legal occupations %occupation_health_practitioners[number]Data from Health diagnosing and treating practitioners and other technical occupations %occupation_health_technicians[number]Data from Health technologists and technicians %occupation_business_finance[number]Data from Business and financial operations occupations %occupation_management[number]Data from Management occupations %occupation_construction[number]Data from Construction and extraction occupations %occupation_agriculture[number]Data from Farming, fishing, and forestry occupations %occupation_maintenance[number]Data from Installation, maintenance, and repair occupations %occupation_material_moving[number]Data from Material moving occupations %occupation_production[number]Data from Production occupations %occupation_transportation[number]Data from Transportation occupations %occupation_office_admin[number]Data from Office and administrative support occupations %occupation_sales[number]Data from Sales and related occupations %occupation_cleaning_maintenance[number]Data from Building and grounds cleaning and maintenance occupations %occupation_food_service[number]Data from Food preparation and serving related occupations %occupation_healthcare_support[number]Data from Healthcare support occupations %occupation_personal_care[number]Data from Personal care and service occupations %occupation_firefighting[number]Data from Firefighting and prevention, and other protective service workers including supervisors %occupation_law_enforcement[number]Data from Law enforcement workers including supervisors %single_householder[number]Data from Not Cohabiting With Partner %cohabiting_gay[number]Data from Cohabiting With Partner (Gay) %cohabiting_straight[number]Data from Cohabiting With Partner (Straight) %living_with_parents[number]Data from Living With Parents %other_living_situation[number]Data from Other Living Situation %never_married_us_census[number]Data from Never Married % [US Census]never_married_statcan[number]Data from Never Married % [StatCan]married_us_census[number]Data from Married (not divorced) % [US Census]married_statcan[number]Data from Married (not divorced) % [StatCan]divorced_us_census[number]Data from Divorced % [US Census]divorced_statcan[number]Data from Divorced % [StatCan]pres_2008_margin[number]Data from 2008 Presidential Electionpres_swing_2008_2012[number]Data from 2008-2012 Swingpres_2012_margin[number]Data from 2012 Presidential Electionpres_swing_2012_2016[number]Data from 2012-2016 Swingpres_2016_margin[number]Data from 2016 Presidential Electionpres_swing_2016_2020[number]Data from 2016-2020 Swingpres_2020_margin[number]Data from 2020 Presidential Electionpres_swing_2020_2024[number]Data from 2020-2024 Swingpres_2024_margin[number]Data from 2024 Presidential Electionpark_1km[number]Data from PW Mean % of parkland within 1kmhospital_within_10km[number]Data from Within 10km of Hospital %hospital_mean_dist[number]Data from Mean distance to nearest Hospitalschool_within_2km[number]Data from Within 2km of Public School %school_mean_dist[number]Data from Mean distance to nearest Public Schoolairport_within_30km[number]Data from Within 30km of Airport %airport_mean_dist[number]Data from Mean distance to nearest Airportsuperfund_within_10km[number]Data from Within 10km of Active Superfund Site %superfund_mean_dist[number]Data from Mean distance to nearest Active Superfund Sitegrocery_store_within_half_mile[number]Data from Within 0.5mi of a grocery store %grocery_store_within_one_mile[number]Data from Within 1mi of a grocery store %grocery_store_within_ten_miles[number]Data from Within 10mi of a grocery store %grocery_store_within_twenty_miles[number]Data from Within 20mi of a grocery store %high_temp[number]Data from Mean high templow_temp[number]Data from Mean low temphigh_heat_index[number]Data from Mean high heat indexhigh_dewpoint[number]Data from Mean high dewpthot_days[number]Data from High temperature Above 90°F %moderate_temp_days[number]Data from High temperature Between 40 and 90°F %cold_days[number]Data from High temperature Below 40°F %humid_days[number]Data from Humid days (dewpt > 70°F) %moderate_humidity_days[number]Data from Non-humid days (50°F < dewpt < 70°F) %dry_days[number]Data from Dry days (dewpt < 50°F) %sunny_hours[number]Data from Mean sunny hoursrainfall[number]Data from Rainfallsnowfall[number]Data from Snowfall [rain-equivalent]windy_days[number]Data from High windspeed (>10mph) days %high_temp_djf[number]Data from Mean high temperature in Dec/Jan/Febhigh_temp_mam[number]Data from Mean high temperature in Mar/Apr/Mayhigh_temp_jja[number]Data from Mean high temperature in Jun/Jul/Aughigh_temp_son[number]Data from Mean high temperature in Sep/Oct/Novlow_temp_djf[number]Data from Mean low temperature in Dec/Jan/Feblow_temp_mam[number]Data from Mean low temperature in Mar/Apr/Maylow_temp_jja[number]Data from Mean low temperature in Jun/Jul/Auglow_temp_son[number]Data from Mean low temperature in Sep/Oct/Novno_internet[number]Data from No internet access %uninsured[number]Data from Uninsured %public_insurance[number]Data from Public Insurance %private_insurance[number]Data from Private Insurance %density_pw_250m_us_census[number]Data from PW Density (r=250m) [US Census]density_pw_250m_statcan[number]Data from PW Density (250m) [StatCan]density_pw_250m_2010[number]Data from PW Density (r=250m) (2010)density_pw_250m_change_2010_2020[number]Data from PW Density (r=250m) Change (2010-2020)density_pw_250m_2000[number]Data from PW Density (r=250m) (2000)density_pw_250m_change_2000_2020[number]Data from PW Density (r=250m) Change (2000-2020)density_pw_500m_us_census[number]Data from PW Density (r=500m) [US Census]density_pw_500m_statcan[number]Data from PW Density (500m) [StatCan]density_pw_500m_2010[number]Data from PW Density (r=500m) (2010)density_pw_500m_change_2010_2020[number]Data from PW Density (r=500m) Change (2010-2020)density_pw_500m_2000[number]Data from PW Density (r=500m) (2000)density_pw_500m_change_2000_2020[number]Data from PW Density (r=500m) Change (2000-2020)density_pw_1mi_us_census[number]Data from PW Density (r=1mi) [US Census]density_pw_1mi_statcan[number]Data from PW Density (1mi) [StatCan]density_pw_1mi_ghsl[number]Data from PW Density (r=1mi) [GHS-POP]density_pw_1mi_2010[number]Data from PW Density (r=1mi) (2010)density_pw_1mi_change_2010_2020[number]Data from PW Density (r=1mi) Change (2010-2020)density_pw_1mi_2000[number]Data from PW Density (r=1mi) (2000)density_pw_1mi_change_2000_2020[number]Data from PW Density (r=1mi) Change (2000-2020)density_pw_2km_us_census[number]Data from PW Density (r=2km) [US Census]density_pw_2km_statcan[number]Data from PW Density (2km) [StatCan]density_pw_2km_ghsl[number]Data from PW Density (r=2km) [GHS-POP]density_pw_2km_2010[number]Data from PW Density (r=2km) (2010)density_pw_2km_change_2010_2020[number]Data from PW Density (r=2km) Change (2010-2020)density_pw_2km_2000[number]Data from PW Density (r=2km) (2000)density_pw_2km_change_2000_2020[number]Data from PW Density (r=2km) Change (2000-2020)density_pw_4km_us_census[number]Data from PW Density (r=4km) [US Census]density_pw_4km_statcan[number]Data from PW Density (4km) [StatCan]density_pw_4km_ghsl[number]Data from PW Density (r=4km) [GHS-POP]density_pw_4km_2010[number]Data from PW Density (r=4km) (2010)density_pw_4km_change_2010_2020[number]Data from PW Density (r=4km) Change (2010-2020)density_pw_4km_2000[number]Data from PW Density (r=4km) (2000)density_pw_4km_change_2000_2020[number]Data from PW Density (r=4km) Change (2000-2020)density_pw_8km_us_census[number]Data from PW Density (r=8km) [US Census]density_pw_8km_statcan[number]Data from PW Density (8km) [StatCan]density_pw_8km_ghsl[number]Data from PW Density (r=8km) [GHS-POP]density_pw_8km_2010[number]Data from PW Density (r=8km) (2010)density_pw_8km_change_2010_2020[number]Data from PW Density (r=8km) Change (2010-2020)density_pw_8km_2000[number]Data from PW Density (r=8km) (2000)density_pw_8km_change_2000_2020[number]Data from PW Density (r=8km) Change (2000-2020)density_pw_16km_us_census[number]Data from PW Density (r=16km) [US Census]density_pw_16km_statcan[number]Data from PW Density (16km) [StatCan]density_pw_16km_ghsl[number]Data from PW Density (r=16km) [GHS-POP]density_pw_16km_2010[number]Data from PW Density (r=16km) (2010)density_pw_16km_change_2010_2020[number]Data from PW Density (r=16km) Change (2010-2020)density_pw_16km_2000[number]Data from PW Density (r=16km) (2000)density_pw_16km_change_2000_2020[number]Data from PW Density (r=16km) Change (2000-2020)density_pw_32km_us_census[number]Data from PW Density (r=32km) [US Census]density_pw_32km_statcan[number]Data from PW Density (32km) [StatCan]density_pw_32km_ghsl[number]Data from PW Density (r=32km) [GHS-POP]density_pw_32km_2010[number]Data from PW Density (r=32km) (2010)density_pw_32km_change_2010_2020[number]Data from PW Density (r=32km) Change (2010-2020)density_pw_32km_2000[number]Data from PW Density (r=32km) (2000)density_pw_32km_change_2000_2020[number]Data from PW Density (r=32km) Change (2000-2020)density_pw_64km_us_census[number]Data from PW Density (r=64km) [US Census]density_pw_64km_statcan[number]Data from PW Density (64km) [StatCan]density_pw_64km_ghsl[number]Data from PW Density (r=64km) [GHS-POP]density_pw_64km_2010[number]Data from PW Density (r=64km) (2010)density_pw_64km_change_2010_2020[number]Data from PW Density (r=64km) Change (2010-2020)density_pw_64km_2000[number]Data from PW Density (r=64km) (2000)density_pw_64km_change_2000_2020[number]Data from PW Density (r=64km) Change (2000-2020)high_temp_summer[number]Data from Mean high temperature in summerhigh_temp_winter[number]Data from Mean high temperature in winterhigh_temp_fall[number]Data from Mean high temperature in fallhigh_temp_spring[number]Data from Mean high temperature in springpopulation[number]Data from Population (from whatever source is most reliable)density_pw_1km[number]Data from PW Density (r=1km) (from whatever source is most reliable) (default)density_aw[number]Data from AW Density (from whatever source is most reliable)silent[number]Data from Silent % (from whatever source is most reliable)boomer[number]Data from Boomer % (from whatever source is most reliable)gen_x[number]Data from Gen X % (from whatever source is most reliable)millennial[number]Data from Millennial % (from whatever source is most reliable)gen_z[number]Data from Gen Z % (from whatever source is most reliable)gen_alpha[number]Data from Gen Alpha % (from whatever source is most reliable)commute_time_median[number]Data from Median Commute Time (min) (from whatever source is most reliable)commute_time_under_15[number]Data from Commute Time < 15 min % (from whatever source is most reliable)commute_time_15_to_29[number]Data from Commute Time 15 - 29 min % (from whatever source is most reliable)commute_time_30_to_59[number]Data from Commute Time 30 - 59 min % (from whatever source is most reliable)commute_time_over_60[number]Data from Commute Time > 60 min % (from whatever source is most reliable)industry_agriculture_forestry_fishing[number]Data from Agriculture, forestry, fishing and hunting % (from whatever source is most reliable)industry_mining_oil_gas[number]Data from Mining, quarrying, and oil and gas extraction % (from whatever source is most reliable)industry_accommodation_food[number]Data from Accommodation and food services % (from whatever source is most reliable)industry_arts_entertainment[number]Data from Arts, entertainment, and recreation % (from whatever source is most reliable)industry_construction[number]Data from Construction % (from whatever source is most reliable)industry_education[number]Data from Educational services % (from whatever source is most reliable)industry_healthcare_social[number]Data from Health care and social assistance % (from whatever source is most reliable)industry_finance_insurance[number]Data from Finance and insurance % (from whatever source is most reliable)industry_real_estate_rental[number]Data from Real estate and rental and leasing % (from whatever source is most reliable)industry_information[number]Data from Information % (from whatever source is most reliable)industry_manufacturing[number]Data from Manufacturing % (from whatever source is most reliable)industry_other_services[number]Data from Other services, except public administration % (from whatever source is most reliable)industry_admin_support_waste_mgmt[number]Data from Administrative and support and waste management services % (from whatever source is most reliable)industry_management[number]Data from Management of companies and enterprises % (from whatever source is most reliable)industry_professional_scientific_technical[number]Data from Professional, scientific, and technical services % (from whatever source is most reliable)industry_public_admin[number]Data from Public administration % (from whatever source is most reliable)industry_retail_trade[number]Data from Retail trade % (from whatever source is most reliable)industry_transportation_warehousing[number]Data from Transportation and warehousing % (from whatever source is most reliable)industry_utilities[number]Data from Utilities % (from whatever source is most reliable)industry_wholesale_trade[number]Data from Wholesale trade % (from whatever source is most reliable)never_married[number]Data from Never Married % (from whatever source is most reliable)married[number]Data from Married (not divorced) % (from whatever source is most reliable)divorced[number]Data from Divorced % (from whatever source is most reliable)density_pw_250m[number]Data from PW Density (r=250m) (from whatever source is most reliable)density_pw_500m[number]Data from PW Density (r=500m) (from whatever source is most reliable)density_pw_1mi[number]Data from PW Density (r=1mi) (from whatever source is most reliable)density_pw_2km[number]Data from PW Density (r=2km) (from whatever source is most reliable)density_pw_4km[number]Data from PW Density (r=4km) (from whatever source is most reliable)density_pw_8km[number]Data from PW Density (r=8km) (from whatever source is most reliable)density_pw_16km[number]Data from PW Density (r=16km) (from whatever source is most reliable)density_pw_32km[number]Data from PW Density (r=32km) (from whatever source is most reliable)density_pw_64km[number]Data from PW Density (r=64km) (from whatever source is most reliable)▶Logic and ControlBoolean values and control flow constants.trueType:booleanBoolean true value representing logical truth.Default value for this typefalseType:booleanBoolean false value representing logical falsehood.nullType:nullRepresents the absence of a value or an uninitialized variable.Default value for this type▶Map and VisualizationFunctions for creating choropleth maps, point maps, and map styling.cMapType:(; data: [number], scale: scale, ramp: ramp, label: string = null, unit: Unit = null, geo: [geoFeatureHandle] = geo, outline: outline = constructOutline(color=colorBlack, weight=0), basemap: basemap = osmBasemap(), insets: insets = defaultInsets) -> cMapCreates a choropleth map that displays data using color-coded geographic regions. Each region is colored according to its data value using the specified scale and color ramp.Named Arguments:data: Datascale: Scaleramp: Ramplabel: Labelgeo: Geographybasemap: Basemapinsets: Insetsunit: Unitoutline: OutlineDefault value for this typecMapRGBType:(; dataR: [number], dataG: [number], dataB: [number], label: string, unit: Unit = null, geo: [geoFeatureHandle] = geo, outline: outline = constructOutline(color=colorBlack, weight=0), basemap: basemap = osmBasemap(), insets: insets = defaultInsets) -> cMapRGBCreates a choropleth map that displays data using RGB color values. Each region is colored according to its red, green, and blue data values, allowing for more complex color representations than traditional single-value choropleth maps.Named Arguments:dataR: Red Data (0-1)dataG: Green Data (0-1)dataB: Blue Data (0-1)label: Labelgeo: Geographyoutline: Outlinebasemap: Basemapinsets: Insetsunit: UnitDefault value for this typepMapType:(; data: [number], scale: scale, ramp: ramp, label: string = null, unit: Unit = null, geo: [geoCentroidHandle] = geoCentroid, maxRadius: number = 10, relativeArea: [number] = null, basemap: basemap = osmBasemap(), insets: insets = defaultInsets) -> pMapCreates a point map that displays data using circles at geographic locations. This is like a choropleth map, but instead of coloring regions, it colors points centered on the geographic locations. The relativeArea parameter can be used to specify the area of the points, which is used to determine the radius of the points. If not specified, the areas are all equal.Named Arguments:data: Datascale: Scaleramp: Ramplabel: Labelgeo: Geographybasemap: Basemapinsets: Insetsunit: UnitmaxRadius: Max RadiusrelativeArea: Relative AreaDefault value for this typeconstructOutlineType:(; color: color = rgb(0, 0, 0), weight: number = 0.5) -> outlineCreates an outline specification for map features with customizable color and weight (border width).Named Arguments:color: Border Colorweight: Border WidthDefault value for this typeosmBasemapType:(; noLabels: boolean = false, subnationalOutlines: outline = constructOutline(color=colorBlack, weight=1)) -> basemapCreates an OpenStreetMap basemap with customizable label visibility and subnational boundary outlines. Provides geographic context for data visualization.Named Arguments:noLabels: Disable Basemap LabelssubnationalOutlines: Subnational OutlinesDefault value for this typenoBasemapType:(; backgroundColor: color = rgb(1, 1, 1, a=1), textColor: color = null) -> basemapCreates a basemap with no background map, showing only the data visualization on a customizable background color (transparent by default).Default value for this typegeoType:[geoFeatureHandle]A vector containing geographic feature handles for the current universe. Each element represents a geographic unit (e.g., census block, county) that can be used for mapping and spatial analysis.▶Scaling FunctionsFunctions for scaling numeric data to visualization ranges.linearScaleType:(; min: number = null, center: number = null, max: number = null) -> scaleCreates a linear scale that maps numeric values to a range. If min/max are not specified, they are computed from the data. Center parameter can be used to create symmetric ranges.Default value for this typelogScaleType:(; min: number = null, center: number = null, max: number = null) -> scaleCreates a logarithmic scale that maps numeric values to a range using log transformation. Useful for data with wide ranges or exponential distributions. If min/max are not specified, they are computed from the data. Center parameter can be used to create symmetric ranges.▶Color RampsFunctions for creating and manipulating color ramps for data visualization.constructRampType:([{color: color, value: number}]; ) -> rampCreates a custom color ramp from a vector of value-color pairs. Values should range from 0 to 1 and be strictly increasing.reverseRampType:(ramp; ) -> rampRepresents a ramp that is ordered from highest to lowest value, in reverse order from the original ramp.divergingRampType:(; first: color, middle: color = colorWhite, last: color) -> rampCreates a diverging color ramp with three colors: first color at 0, middle color at 0.5, and last color at 1.Predefined Color RampsPredefined color ramps for mapping numeric values to colors in data visualizations.NameTypeDescriptionrampUridisrampPredefined color ramp "Uridis" for mapping numeric values to colors. (default)rampMagmarampPredefined color ramp "Magma" for mapping numeric values to colors.rampInfernorampPredefined color ramp "Inferno" for mapping numeric values to colors.rampPlasmarampPredefined color ramp "Plasma" for mapping numeric values to colors.rampViridisrampPredefined color ramp "Viridis" for mapping numeric values to colors.rampCividisrampPredefined color ramp "Cividis" for mapping numeric values to colors.rampTwilightrampPredefined color ramp "Twilight" for mapping numeric values to colors.rampTwilightShiftedrampPredefined color ramp "Twilight Shifted" for mapping numeric values to colors.rampTurborampPredefined color ramp "Turbo" for mapping numeric values to colors.rampCMRmaprampPredefined color ramp "CMRmap" for mapping numeric values to colors.rampWistiarampPredefined color ramp "Wistia" for mapping numeric values to colors.rampAfmhotrampPredefined color ramp "Afmhot" for mapping numeric values to colors.rampAutumnrampPredefined color ramp "Autumn" for mapping numeric values to colors.rampBinaryrampPredefined color ramp "Binary" for mapping numeric values to colors.rampBonerampPredefined color ramp "Bone" for mapping numeric values to colors.rampCoolrampPredefined color ramp "Cool" for mapping numeric values to colors.rampCopperrampPredefined color ramp "Copper" for mapping numeric values to colors.rampCubehelixrampPredefined color ramp "Cubehelix" for mapping numeric values to colors.rampGistEarthrampPredefined color ramp "Gist Earth" for mapping numeric values to colors.rampGistGrayrampPredefined color ramp "Gist Gray" for mapping numeric values to colors.rampGistHeatrampPredefined color ramp "Gist Heat" for mapping numeric values to colors.rampGistNcarrampPredefined color ramp "Gist Ncar" for mapping numeric values to colors.rampGistRainbowrampPredefined color ramp "Gist Rainbow" for mapping numeric values to colors.rampGistSternrampPredefined color ramp "Gist Stern" for mapping numeric values to colors.rampGistYargrampPredefined color ramp "Gist Yarg" for mapping numeric values to colors.rampGnuplotrampPredefined color ramp "Gnuplot" for mapping numeric values to colors.rampGnuplot2rampPredefined color ramp "Gnuplot2" for mapping numeric values to colors.rampGrayrampPredefined color ramp "Gray" for mapping numeric values to colors.rampHotrampPredefined color ramp "Hot" for mapping numeric values to colors.rampJetrampPredefined color ramp "Jet" for mapping numeric values to colors.rampNipySpectralrampPredefined color ramp "Nipy Spectral" for mapping numeric values to colors.rampOceanrampPredefined color ramp "Ocean" for mapping numeric values to colors.rampPinkrampPredefined color ramp "Pink" for mapping numeric values to colors.rampRainbowrampPredefined color ramp "Rainbow" for mapping numeric values to colors.rampSpringrampPredefined color ramp "Spring" for mapping numeric values to colors.rampSummerrampPredefined color ramp "Summer" for mapping numeric values to colors.rampTerrainrampPredefined color ramp "Terrain" for mapping numeric values to colors.rampWinterrampPredefined color ramp "Winter" for mapping numeric values to colors.rampBluesrampPredefined color ramp "Blues" for mapping numeric values to colors.rampBuGnrampPredefined color ramp "BuGn" for mapping numeric values to colors.rampBuPurampPredefined color ramp "BuPu" for mapping numeric values to colors.rampGnBurampPredefined color ramp "GnBu" for mapping numeric values to colors.rampGreensrampPredefined color ramp "Greens" for mapping numeric values to colors.rampGreysrampPredefined color ramp "Greys" for mapping numeric values to colors.rampOrRdrampPredefined color ramp "OrRd" for mapping numeric values to colors.rampOrangesrampPredefined color ramp "Oranges" for mapping numeric values to colors.rampPuBurampPredefined color ramp "PuBu" for mapping numeric values to colors.rampPuBuGnrampPredefined color ramp "PuBuGn" for mapping numeric values to colors.rampPuRdrampPredefined color ramp "PuRd" for mapping numeric values to colors.rampPurplesrampPredefined color ramp "Purples" for mapping numeric values to colors.rampRdPurampPredefined color ramp "RdPu" for mapping numeric values to colors.rampRedsrampPredefined color ramp "Reds" for mapping numeric values to colors.rampYlGnrampPredefined color ramp "YlGn" for mapping numeric values to colors.rampYlGnBurampPredefined color ramp "YlGnBu" for mapping numeric values to colors.rampYlOrBrrampPredefined color ramp "YlOrBr" for mapping numeric values to colors.rampYlOrRdrampPredefined color ramp "YlOrRd" for mapping numeric values to colors.rampBrgrampPredefined color ramp "Brg" for mapping numeric values to colors.rampBrBGrampPredefined color ramp "BrBG" for mapping numeric values to colors.rampPRGnrampPredefined color ramp "PRGn" for mapping numeric values to colors.rampPiYGrampPredefined color ramp "PiYG" for mapping numeric values to colors.rampPuOrrampPredefined color ramp "PuOr" for mapping numeric values to colors.rampRdBurampPredefined color ramp "RdBu" for mapping numeric values to colors.rampRdGyrampPredefined color ramp "RdGy" for mapping numeric values to colors.rampRdYlBurampPredefined color ramp "RdYlBu" for mapping numeric values to colors.rampRdYlGnrampPredefined color ramp "RdYlGn" for mapping numeric values to colors.rampSpectralrampPredefined color ramp "Spectral" for mapping numeric values to colors.rampBwrrampPredefined color ramp "Bwr" for mapping numeric values to colors.rampCoolwarmrampPredefined color ramp "Coolwarm" for mapping numeric values to colors.rampSeismicrampPredefined color ramp "Seismic" for mapping numeric values to colors.▶Unit TypesUnit type constants for specifying measurement units in data visualization.Unit Type ConstantsUnit type constants for specifying measurement units in data visualization and analysis.NameTypeDescriptionunitPercentageUnitUnit type representing percentage measurements.unitFatalitiesUnitUnit type representing fatalities measurements.unitFatalitiesPerCapitaUnitUnit type representing fatalities per capita measurements.unitDensityUnitUnit type representing density measurements.unitPopulationUnitUnit type representing population measurements.unitAreaUnitUnit type representing area measurements.unitDistanceInKmUnitUnit type representing distance [km] measurements.unitDistanceInMUnitUnit type representing distance [m] measurements.unitDemocraticMarginUnitUnit type representing democratic margin measurements.unitTemperatureUnitUnit type representing temperature measurements.unitTimeUnitUnit type representing time measurements.unitDistancePerYearUnitUnit type representing distance per year measurements.unitContaminantLevelUnitUnit type representing contaminant level measurements.unitNumberUnitUnit type representing number measurements. (default)unitUsdUnitUnit type representing usd measurements.▶Map InsetsFunctions for creating map insets and managing multiple map views.constructInsetType:(; screenBounds: {east: number, north: number, south: number, west: number}, mapBounds: {east: number, north: number, south: number, west: number}, mainMap: boolean, name: string) -> insetCreates a custom map inset with specified screen bounds (bounding box of the inset on the screen, where bottom left corner has (0, 0) and top right corner has (1, 1)), map bounds (bounding box of the inset on the map, in longitude and latitude), and whether it is the main map (the interactive map).constructInsetsType:([inset]; ) -> insetsCreates a collection of map insets.Default value for this typePredefined Map InsetsPredefined map inset configurations for common geographic regions and territories.NameTypeDescriptioninsetworldinsetPredefined map inset for the region "world".insetAfricainsetPredefined map inset for the region "Africa".insetAsiainsetPredefined map inset for the region "Asia".insetEuropeinsetPredefined map inset for the region "Europe".insetNorthAmericainsetPredefined map inset for the region "North America".insetOceaniainsetPredefined map inset for the region "Oceania".insetSouthAmericainsetPredefined map inset for the region "South America".insetAndorrainsetPredefined map inset for the region "Andorra".insetUnitedArabEmiratesinsetPredefined map inset for the region "United Arab Emirates".insetAfghanistaninsetPredefined map inset for the region "Afghanistan".insetAntiguainsetPredefined map inset for the region "Antigua".insetBarbudainsetPredefined map inset for the region "Barbuda".insetAnguillainsetPredefined map inset for the region "Anguilla".insetAlbaniainsetPredefined map inset for the region "Albania".insetArmeniainsetPredefined map inset for the region "Armenia".insetAngolainsetPredefined map inset for the region "Angola".insetArgentinainsetPredefined map inset for the region "Argentina".insetAustriainsetPredefined map inset for the region "Austria".insetAustraliainsetPredefined map inset for the region "Australia".insetArubainsetPredefined map inset for the region "Aruba".insetAzerbaijaninsetPredefined map inset for the region "Azerbaijan".insetBosniaandHerzegovinainsetPredefined map inset for the region "Bosnia and Herzegovina".insetBarbadosinsetPredefined map inset for the region "Barbados".insetBangladeshinsetPredefined map inset for the region "Bangladesh".insetBelgiuminsetPredefined map inset for the region "Belgium".insetBurkinaFasoinsetPredefined map inset for the region "Burkina Faso".insetBulgariainsetPredefined map inset for the region "Bulgaria".insetBahraininsetPredefined map inset for the region "Bahrain".insetBurundiinsetPredefined map inset for the region "Burundi".insetBenininsetPredefined map inset for the region "Benin".insetBermudainsetPredefined map inset for the region "Bermuda".insetBruneiinsetPredefined map inset for the region "Brunei".insetBoliviainsetPredefined map inset for the region "Bolivia".insetBrazilinsetPredefined map inset for the region "Brazil".insetTheBahamasinsetPredefined map inset for the region "The Bahamas".insetBhutaninsetPredefined map inset for the region "Bhutan".insetBotswanainsetPredefined map inset for the region "Botswana".insetBelarusinsetPredefined map inset for the region "Belarus".insetBelizeinsetPredefined map inset for the region "Belize".insetCanadainsetPredefined map inset for the region "Canada".insetCocosKeelingIslandsinsetPredefined map inset for the region "Cocos (Keeling) Islands".insetDemocraticRepublicoftheCongoinsetPredefined map inset for the region "Democratic Republic of the Congo".insetCentralAfricanRepublicinsetPredefined map inset for the region "Central African Republic".insetCongoinsetPredefined map inset for the region "Congo".insetSwitzerlandinsetPredefined map inset for the region "Switzerland".insetIvoryCoastinsetPredefined map inset for the region "Ivory Coast".insetCookIslandsinsetPredefined map inset for the region "Cook Islands".insetChileinsetPredefined map inset for the region "Chile".insetCamerooninsetPredefined map inset for the region "Cameroon".insetChinainsetPredefined map inset for the region "China".insetColumbiainsetPredefined map inset for the region "Columbia".insetCostaRicainsetPredefined map inset for the region "Costa Rica".insetCubainsetPredefined map inset for the region "Cuba".insetCapeVerdeinsetPredefined map inset for the region "Cape Verde".insetChristmasIslandinsetPredefined map inset for the region "Christmas Island".insetCyprusinsetPredefined map inset for the region "Cyprus".insetCzechRepublicinsetPredefined map inset for the region "Czech Republic".insetGermanyinsetPredefined map inset for the region "Germany".insetDjiboutiinsetPredefined map inset for the region "Djibouti".insetDenmarkinsetPredefined map inset for the region "Denmark".insetDominicainsetPredefined map inset for the region "Dominica".insetDominicanRepublicinsetPredefined map inset for the region "Dominican Republic".insetAlgeriainsetPredefined map inset for the region "Algeria".insetEucadorMainlandinsetPredefined map inset for the region "Eucador Mainland".insetGalapagosinsetPredefined map inset for the region "Galapagos".insetEstoniainsetPredefined map inset for the region "Estonia".insetEgyptinsetPredefined map inset for the region "Egypt".insetEritreainsetPredefined map inset for the region "Eritrea".insetSpainMainlandinsetPredefined map inset for the region "Spain Mainland".insetCanaryIslandsinsetPredefined map inset for the region "Canary Islands".insetEthiopiainsetPredefined map inset for the region "Ethiopia".insetFinlandinsetPredefined map inset for the region "Finland".insetFijiMainIslandsinsetPredefined map inset for the region "Fiji Main Islands".insetFalklandIslandsinsetPredefined map inset for the region "Falkland Islands".insetMicronesiainsetPredefined map inset for the region "Micronesia".insetFaroeIslandsinsetPredefined map inset for the region "Faroe Islands".insetMainlandFranceinsetPredefined map inset for the region "Mainland France".insetGuadeloupeinsetPredefined map inset for the region "Guadeloupe".insetMartiniqueinsetPredefined map inset for the region "Martinique".insetCorsicainsetPredefined map inset for the region "Corsica".insetFrenchGuianainsetPredefined map inset for the region "French Guiana".insetMayotteinsetPredefined map inset for the region "Mayotte".insetRéunioninsetPredefined map inset for the region "Réunion".insetGaboninsetPredefined map inset for the region "Gabon".insetUnitedKingdominsetPredefined map inset for the region "United Kingdom".insetGrenadaMainlandinsetPredefined map inset for the region "Grenada Mainland".insetSouthernGrenadineIslandsinsetPredefined map inset for the region "Southern Grenadine Islands".insetGeorgiainsetPredefined map inset for the region "Georgia".insetGuernseyinsetPredefined map inset for the region "Guernsey".insetGhanainsetPredefined map inset for the region "Ghana".insetGibraltarinsetPredefined map inset for the region "Gibraltar".insetGreenlandinsetPredefined map inset for the region "Greenland".insetTheGambiainsetPredefined map inset for the region "The Gambia".insetGuineainsetPredefined map inset for the region "Guinea".insetEquatorialGuineaMainlandinsetPredefined map inset for the region "Equatorial Guinea Mainland".insetBiokoinsetPredefined map inset for the region "Bioko".insetGreeceinsetPredefined map inset for the region "Greece".insetGuatemalainsetPredefined map inset for the region "Guatemala".insetGuineaBissauinsetPredefined map inset for the region "Guinea-Bissau".insetGuyanainsetPredefined map inset for the region "Guyana".insetHondurasinsetPredefined map inset for the region "Honduras".insetCroatiainsetPredefined map inset for the region "Croatia".insetHaitiinsetPredefined map inset for the region "Haiti".insetHungaryinsetPredefined map inset for the region "Hungary".insetIndonesiainsetPredefined map inset for the region "Indonesia".insetIrelandinsetPredefined map inset for the region "Ireland".insetIsraelinsetPredefined map inset for the region "Israel".insetIsleofManinsetPredefined map inset for the region "Isle of Man".insetIndiainsetPredefined map inset for the region "India".insetIraqinsetPredefined map inset for the region "Iraq".insetIraninsetPredefined map inset for the region "Iran".insetIcelandinsetPredefined map inset for the region "Iceland".insetItalyinsetPredefined map inset for the region "Italy".insetJerseyinsetPredefined map inset for the region "Jersey".insetJamaicainsetPredefined map inset for the region "Jamaica".insetJordaninsetPredefined map inset for the region "Jordan".insetJapaninsetPredefined map inset for the region "Japan".insetKenyainsetPredefined map inset for the region "Kenya".insetKyrgyzstaninsetPredefined map inset for the region "Kyrgyzstan".insetCambodiainsetPredefined map inset for the region "Cambodia".insetKiribatiinsetPredefined map inset for the region "Kiribati".insetComorosinsetPredefined map inset for the region "Comoros".insetSaintKittsandNevisinsetPredefined map inset for the region "Saint Kitts and Nevis".insetNorthKoreainsetPredefined map inset for the region "North Korea".insetSouthKoreainsetPredefined map inset for the region "South Korea".insetKuwaitinsetPredefined map inset for the region "Kuwait".insetCaymanIslandsinsetPredefined map inset for the region "Cayman Islands".insetKazakhstaninsetPredefined map inset for the region "Kazakhstan".insetLaosinsetPredefined map inset for the region "Laos".insetLebanoninsetPredefined map inset for the region "Lebanon".insetSaintLuciainsetPredefined map inset for the region "Saint Lucia".insetLiechtensteininsetPredefined map inset for the region "Liechtenstein".insetSriLankainsetPredefined map inset for the region "Sri Lanka".insetLiberiainsetPredefined map inset for the region "Liberia".insetLesothoinsetPredefined map inset for the region "Lesotho".insetLithuaniainsetPredefined map inset for the region "Lithuania".insetLuxembourginsetPredefined map inset for the region "Luxembourg".insetLatviainsetPredefined map inset for the region "Latvia".insetLibyainsetPredefined map inset for the region "Libya".insetMoroccoinsetPredefined map inset for the region "Morocco".insetMonacoinsetPredefined map inset for the region "Monaco".insetMoldovainsetPredefined map inset for the region "Moldova".insetMontenegroinsetPredefined map inset for the region "Montenegro".insetMadagascarinsetPredefined map inset for the region "Madagascar".insetMarshallIslandsinsetPredefined map inset for the region "Marshall Islands".insetNorthMacedoniainsetPredefined map inset for the region "North Macedonia".insetMaliinsetPredefined map inset for the region "Mali".insetMyanmarinsetPredefined map inset for the region "Myanmar".insetMongoliainsetPredefined map inset for the region "Mongolia".insetMauritaniainsetPredefined map inset for the region "Mauritania".insetMontserratinsetPredefined map inset for the region "Montserrat".insetMaltainsetPredefined map inset for the region "Malta".insetMauritiusMainlandinsetPredefined map inset for the region "Mauritius Mainland".insetRodriguesIslandinsetPredefined map inset for the region "Rodrigues Island".insetAgalegaIslandsinsetPredefined map inset for the region "Agalega Islands".insetMaldivesinsetPredefined map inset for the region "Maldives".insetMalawiinsetPredefined map inset for the region "Malawi".insetMexicoinsetPredefined map inset for the region "Mexico".insetPeninsularMalaysiainsetPredefined map inset for the region "Peninsular Malaysia".insetEastMalaysiainsetPredefined map inset for the region "East Malaysia".insetMozambiqueinsetPredefined map inset for the region "Mozambique".insetNamibiainsetPredefined map inset for the region "Namibia".insetNigerinsetPredefined map inset for the region "Niger".insetNorfolkIslandinsetPredefined map inset for the region "Norfolk Island".insetNigeriainsetPredefined map inset for the region "Nigeria".insetNicaraguainsetPredefined map inset for the region "Nicaragua".insetDutchCarribeanNorthinsetPredefined map inset for the region "Dutch Carribean (North)".insetDutchCarribeanSouthinsetPredefined map inset for the region "Dutch Carribean (South)".insetNorwayinsetPredefined map inset for the region "Norway".insetNepalinsetPredefined map inset for the region "Nepal".insetNauruinsetPredefined map inset for the region "Nauru".insetNiueinsetPredefined map inset for the region "Niue".insetNewZealandinsetPredefined map inset for the region "New Zealand".insetOmaninsetPredefined map inset for the region "Oman".insetPanamainsetPredefined map inset for the region "Panama".insetPeruinsetPredefined map inset for the region "Peru".insetPapuaNewGuineainsetPredefined map inset for the region "Papua New Guinea".insetPhilippinesinsetPredefined map inset for the region "Philippines".insetPakistaninsetPredefined map inset for the region "Pakistan".insetPolandinsetPredefined map inset for the region "Poland".insetPitcairnIslandsinsetPredefined map inset for the region "Pitcairn Islands".insetStateofPalestineinsetPredefined map inset for the region "State of Palestine".insetPortugalMainlandinsetPredefined map inset for the region "Portugal Mainland".insetAzoresinsetPredefined map inset for the region "Azores".insetMadeirainsetPredefined map inset for the region "Madeira".insetPalauMainlandinsetPredefined map inset for the region "Palau Mainland".insetParaguayinsetPredefined map inset for the region "Paraguay".insetQatarinsetPredefined map inset for the region "Qatar".insetRomaniainsetPredefined map inset for the region "Romania".insetSerbiainsetPredefined map inset for the region "Serbia".insetRussiainsetPredefined map inset for the region "Russia".insetRwandainsetPredefined map inset for the region "Rwanda".insetSaudiArabiainsetPredefined map inset for the region "Saudi Arabia".insetSolomonIslandsinsetPredefined map inset for the region "Solomon Islands".insetSeychellesinsetPredefined map inset for the region "Seychelles".insetSudaninsetPredefined map inset for the region "Sudan".insetSwedeninsetPredefined map inset for the region "Sweden".insetSingaporeinsetPredefined map inset for the region "Singapore".insetSaintHelenaAscensionandTristandaCunhainsetPredefined map inset for the region "Saint Helena, Ascension and Tristan da Cunha".insetSloveniainsetPredefined map inset for the region "Slovenia".insetSlovakiainsetPredefined map inset for the region "Slovakia".insetSierraLeoneinsetPredefined map inset for the region "Sierra Leone".insetSanMarinoinsetPredefined map inset for the region "San Marino".insetSenegalinsetPredefined map inset for the region "Senegal".insetSomaliainsetPredefined map inset for the region "Somalia".insetSurinameinsetPredefined map inset for the region "Suriname".insetSouthSudaninsetPredefined map inset for the region "South Sudan".insetSãoToméinsetPredefined map inset for the region "São Tomé".insetPríncipeinsetPredefined map inset for the region "Príncipe".insetElSalvadorinsetPredefined map inset for the region "El Salvador".insetSyriainsetPredefined map inset for the region "Syria".insetEswatiniinsetPredefined map inset for the region "Eswatini".insetTurksandCaicosIslandsinsetPredefined map inset for the region "Turks and Caicos Islands".insetChadinsetPredefined map inset for the region "Chad".insetTogoinsetPredefined map inset for the region "Togo".insetThailandinsetPredefined map inset for the region "Thailand".insetTajikistaninsetPredefined map inset for the region "Tajikistan".insetTokelauinsetPredefined map inset for the region "Tokelau".insetEastTimorinsetPredefined map inset for the region "East Timor".insetTurkmenistaninsetPredefined map inset for the region "Turkmenistan".insetTunisiainsetPredefined map inset for the region "Tunisia".insetTongainsetPredefined map inset for the region "Tonga".insetTurkeyinsetPredefined map inset for the region "Turkey".insetTrinidadandTobagoinsetPredefined map inset for the region "Trinidad and Tobago".insetTuvaluinsetPredefined map inset for the region "Tuvalu".insetTanzaniainsetPredefined map inset for the region "Tanzania".insetUkraineinsetPredefined map inset for the region "Ukraine".insetUgandainsetPredefined map inset for the region "Uganda".insetContinentalUSAinsetPredefined map inset for the region "Continental USA".insetGuaminsetPredefined map inset for the region "Guam".insetPuertoRicoPlusUSVIinsetPredefined map inset for the region "Puerto Rico + USVI".insetHawaiiinsetPredefined map inset for the region "Hawaii".insetAlaskainsetPredefined map inset for the region "Alaska".insetUruguayinsetPredefined map inset for the region "Uruguay".insetUzbekistaninsetPredefined map inset for the region "Uzbekistan".insetVaticanCityinsetPredefined map inset for the region "Vatican City".insetSaintVincentandtheGrenadinesinsetPredefined map inset for the region "Saint Vincent and the Grenadines".insetVenezuelainsetPredefined map inset for the region "Venezuela".insetBritishVirginIslandsinsetPredefined map inset for the region "British Virgin Islands".insetVietnaminsetPredefined map inset for the region "Vietnam".insetVanuatuinsetPredefined map inset for the region "Vanuatu".insetSamoainsetPredefined map inset for the region "Samoa".insetYemeninsetPredefined map inset for the region "Yemen".insetSouthAfricainsetPredefined map inset for the region "South Africa".insetZambiainsetPredefined map inset for the region "Zambia".insetZimbabweinsetPredefined map inset for the region "Zimbabwe".insetAlabamaUSAinsetPredefined map inset for the region "Alabama, USA".insetAlaskaUSAinsetPredefined map inset for the region "Alaska, USA".insetArizonaUSAinsetPredefined map inset for the region "Arizona, USA".insetArkansasUSAinsetPredefined map inset for the region "Arkansas, USA".insetCaliforniaUSAinsetPredefined map inset for the region "California, USA".insetColoradoUSAinsetPredefined map inset for the region "Colorado, USA".insetConnecticutUSAinsetPredefined map inset for the region "Connecticut, USA".insetDelawareUSAinsetPredefined map inset for the region "Delaware, USA".insetFloridaUSAinsetPredefined map inset for the region "Florida, USA".insetGeorgiaUSAinsetPredefined map inset for the region "Georgia, USA".insetHawaiiUSAinsetPredefined map inset for the region "Hawaii, USA".insetIdahoUSAinsetPredefined map inset for the region "Idaho, USA".insetIllinoisUSAinsetPredefined map inset for the region "Illinois, USA".insetIndianaUSAinsetPredefined map inset for the region "Indiana, USA".insetIowaUSAinsetPredefined map inset for the region "Iowa, USA".insetKansasUSAinsetPredefined map inset for the region "Kansas, USA".insetKentuckyUSAinsetPredefined map inset for the region "Kentucky, USA".insetLouisianaUSAinsetPredefined map inset for the region "Louisiana, USA".insetMaineUSAinsetPredefined map inset for the region "Maine, USA".insetMarylandUSAinsetPredefined map inset for the region "Maryland, USA".insetMassachusettsUSAinsetPredefined map inset for the region "Massachusetts, USA".insetMichiganUSAinsetPredefined map inset for the region "Michigan, USA".insetMinnesotaUSAinsetPredefined map inset for the region "Minnesota, USA".insetMississippiUSAinsetPredefined map inset for the region "Mississippi, USA".insetMissouriUSAinsetPredefined map inset for the region "Missouri, USA".insetMontanaUSAinsetPredefined map inset for the region "Montana, USA".insetNebraskaUSAinsetPredefined map inset for the region "Nebraska, USA".insetNevadaUSAinsetPredefined map inset for the region "Nevada, USA".insetNewHampshireUSAinsetPredefined map inset for the region "New Hampshire, USA".insetNewJerseyUSAinsetPredefined map inset for the region "New Jersey, USA".insetNewMexicoUSAinsetPredefined map inset for the region "New Mexico, USA".insetNewYorkUSAinsetPredefined map inset for the region "New York, USA".insetNorthCarolinaUSAinsetPredefined map inset for the region "North Carolina, USA".insetNorthDakotaUSAinsetPredefined map inset for the region "North Dakota, USA".insetOhioUSAinsetPredefined map inset for the region "Ohio, USA".insetOklahomaUSAinsetPredefined map inset for the region "Oklahoma, USA".insetOregonUSAinsetPredefined map inset for the region "Oregon, USA".insetPennsylvaniaUSAinsetPredefined map inset for the region "Pennsylvania, USA".insetRhodeIslandUSAinsetPredefined map inset for the region "Rhode Island, USA".insetSouthCarolinaUSAinsetPredefined map inset for the region "South Carolina, USA".insetSouthDakotaUSAinsetPredefined map inset for the region "South Dakota, USA".insetTennesseeUSAinsetPredefined map inset for the region "Tennessee, USA".insetTexasUSAinsetPredefined map inset for the region "Texas, USA".insetUtahUSAinsetPredefined map inset for the region "Utah, USA".insetVermontUSAinsetPredefined map inset for the region "Vermont, USA".insetVirginiaUSAinsetPredefined map inset for the region "Virginia, USA".insetWashingtonUSAinsetPredefined map inset for the region "Washington, USA".insetWestVirginiaUSAinsetPredefined map inset for the region "West Virginia, USA".insetWisconsinUSAinsetPredefined map inset for the region "Wisconsin, USA".insetWyomingUSAinsetPredefined map inset for the region "Wyoming, USA".insetAmericanSamoaUSAinsetPredefined map inset for the region "American Samoa, USA".insetGuamUSAinsetPredefined map inset for the region "Guam, USA".insetNorthernMarianaIslandsUSAinsetPredefined map inset for the region "Northern Mariana Islands, USA".insetPuertoRicoUSAinsetPredefined map inset for the region "Puerto Rico, USA".insetUSVirginIslandsUSAinsetPredefined map inset for the region "US Virgin Islands, USA".insetDistrictofColumbiaUSAinsetPredefined map inset for the region "District of Columbia, USA".insetAlbertaCanadainsetPredefined map inset for the region "Alberta, Canada".insetBritishColumbiaCanadainsetPredefined map inset for the region "British Columbia, Canada".insetManitobaCanadainsetPredefined map inset for the region "Manitoba, Canada".insetNewBrunswickCanadainsetPredefined map inset for the region "New Brunswick, Canada".insetNewfoundlandandLabradorCanadainsetPredefined map inset for the region "Newfoundland and Labrador, Canada".insetNorthwestTerritoriesCanadainsetPredefined map inset for the region "Northwest Territories, Canada".insetNovaScotiaCanadainsetPredefined map inset for the region "Nova Scotia, Canada".insetNunavutCanadainsetPredefined map inset for the region "Nunavut, Canada".insetOntarioCanadainsetPredefined map inset for the region "Ontario, Canada".insetPrinceEdwardIslandCanadainsetPredefined map inset for the region "Prince Edward Island, Canada".insetQuebecCanadainsetPredefined map inset for the region "Quebec, Canada".insetSaskatchewanCanadainsetPredefined map inset for the region "Saskatchewan, Canada".insetYukonCanadainsetPredefined map inset for the region "Yukon, Canada".Urban Stats Version <VERSION> by Kavi Gupta and Luke Brody. Last updated <LAST UPDATED>. Significant help with weather data from OklahomaPerson. Thanks to Taylor for the Metropolitan Clusters. Not for commercial use. If you find Urban Stats useful, please donate on kofi! Check out the Urban Stats Store!