/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/juxtastat/friend_request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Friend Request */
        post: operations["juxtastat_friend_request_juxtastat_friend_request_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/unfriend": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Unfriend */
        post: operations["juxtastat_unfriend_juxtastat_unfriend_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/todays_score_for": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Todays Score For */
        post: operations["juxtastat_todays_score_for_juxtastat_todays_score_for_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/infinite_results": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Infinite Results */
        post: operations["juxtastat_infinite_results_juxtastat_infinite_results_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/get_full_database": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Get Full Database Request */
        post: operations["juxtastat_get_full_database_request_juxtastat_get_full_database_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shorten": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Shorten Request */
        post: operations["shorten_request_shorten_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lengthen": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lengthen Request */
        get: operations["lengthen_request_lengthen_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/s": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Route S */
        get: operations["route_s_s_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/register_user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Register User Request */
        post: operations["juxtastat_register_user_request_juxtastat_register_user_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/latest_day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Juxtastat Latest Day Request */
        get: operations["juxtastat_latest_day_request_juxtastat_latest_day_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/retrostat/latest_week": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrostat Latest Week Request */
        get: operations["retrostat_latest_week_request_retrostat_latest_week_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/store_user_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Store User Stats Request */
        post: operations["juxtastat_store_user_stats_request_juxtastat_store_user_stats_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat_infinite/has_infinite_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Infinite Has Infinite Stats Request */
        post: operations["juxtastat_infinite_has_infinite_stats_request_juxtastat_infinite_has_infinite_stats_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat_infinite/store_user_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Juxtastat Infinite Store User Stats Request */
        post: operations["juxtastat_infinite_store_user_stats_request_juxtastat_infinite_store_user_stats_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/retrostat/store_user_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Retrostat Store User Stats Request */
        post: operations["retrostat_store_user_stats_request_retrostat_store_user_stats_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/get_per_question_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Juxtastat Get Per Question Stats Request */
        get: operations["juxtastat_get_per_question_stats_request_juxtastat_get_per_question_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/retrostat/get_per_question_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrostat Get Per Question Stats Request */
        get: operations["retrostat_get_per_question_stats_request_retrostat_get_per_question_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** FullText */
        FullText: {
            /** Full Text */
            full_text: string;
        };
        /** HTTPExceptionModel */
        HTTPExceptionModel: {
            /** Detail */
            detail?: unknown;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** HasInfiniteStatsBody */
        HasInfiniteStatsBody: {
            /** Seedversions */
            seedVersions: [
                string,
                number
            ][];
        };
        /** HasInfiniteStatsResponse */
        HasInfiniteStatsResponse: {
            /** Has */
            has: boolean[];
        };
        /** InfiniteScoreRequestBody */
        InfiniteScoreRequestBody: {
            /** Requesters */
            requesters: string[];
            /** Seed */
            seed: string;
            /** Version */
            version: number;
        };
        /** InfiniteScoreResponse */
        InfiniteScoreResponse: {
            /** Results */
            results: (components["schemas"]["NegativeResult"] | components["schemas"]["PositiveInfiniteResult"])[];
        };
        /** LatestDayResponse */
        LatestDayResponse: {
            /** Latest Day */
            latest_day: number;
        };
        /** NegativeResult */
        NegativeResult: {
            /**
             * Friends
             * @constant
             */
            friends: false;
        };
        /** PerQuestionResponse */
        PerQuestionResponse: {
            /** Total */
            total: number;
            /** Per Question */
            per_question: number[];
        };
        /** PositiveInfiniteResult */
        PositiveInfiniteResult: {
            /** Forthisseed */
            forThisSeed: number | null;
            /** Maxscore */
            maxScore: number | null;
            /** Maxscoreseed */
            maxScoreSeed: string | null;
            /** Maxscoreversion */
            maxScoreVersion: number | null;
            /**
             * Friends
             * @constant
             */
            friends: true;
        };
        /** PositiveResult */
        PositiveResult: {
            /** Corrects */
            corrects: boolean[] | null;
            /**
             * Friends
             * @constant
             */
            friends: true;
        };
        /**
         * QuizKind
         * @enum {string}
         */
        QuizKind: "juxtastat" | "retrostat";
        /** RegisterBody */
        RegisterBody: {
            /** Domain */
            domain: string;
        };
        /** Requestee */
        Requestee: {
            /** Requestee */
            requestee: string;
        };
        /** ScoreRequestBody */
        ScoreRequestBody: {
            /** Requesters */
            requesters: string[];
            /** Date */
            date: number;
            quiz_kind: components["schemas"]["QuizKind"];
        };
        /** ScoreResponse */
        ScoreResponse: {
            /** Results */
            results: (components["schemas"]["NegativeResult"] | components["schemas"]["PositiveResult"])[];
        };
        /** Shortened */
        Shortened: {
            /** Shortened */
            shortened: string;
        };
        /** StoreInfiniteUserStatsBody */
        StoreInfiniteUserStatsBody: {
            /** Seed */
            seed: string;
            /** Version */
            version: number;
            /** Corrects */
            corrects: boolean[];
        };
        /** StoreUserStatsBody */
        StoreUserStatsBody: {
            /** Day Stats */
            day_stats: [
                number,
                boolean[]
            ][];
        };
        /** TokenBody */
        TokenBody: {
            /** Token */
            token: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    juxtastat_friend_request_juxtastat_friend_request_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Requestee"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_unfriend_juxtastat_unfriend_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Requestee"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_todays_score_for_juxtastat_todays_score_for_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScoreRequestBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScoreResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_infinite_results_juxtastat_infinite_results_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InfiniteScoreRequestBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InfiniteScoreResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_get_full_database_request_juxtastat_get_full_database_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    shorten_request_shorten_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FullText"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Shortened"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    lengthen_request_lengthen_get: {
        parameters: {
            query: {
                shortened: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FullText"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    route_s_s_get: {
        parameters: {
            query: {
                c: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            302: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_register_user_request_juxtastat_register_user_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_latest_day_request_juxtastat_latest_day_get: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LatestDayResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    retrostat_latest_week_request_retrostat_latest_week_get: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LatestDayResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_store_user_stats_request_juxtastat_store_user_stats_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StoreUserStatsBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_infinite_has_infinite_stats_request_juxtastat_infinite_has_infinite_stats_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HasInfiniteStatsBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HasInfiniteStatsResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_infinite_store_user_stats_request_juxtastat_infinite_store_user_stats_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StoreInfiniteUserStatsBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    retrostat_store_user_stats_request_retrostat_store_user_stats_post: {
        parameters: {
            query?: never;
            header: {
                "x-user": string;
                "x-secure-id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StoreUserStatsBody"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    juxtastat_get_per_question_stats_request_juxtastat_get_per_question_stats_get: {
        parameters: {
            query: {
                day: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerQuestionResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
    retrostat_get_per_question_stats_request_retrostat_get_per_question_stats_get: {
        parameters: {
            query: {
                week: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerQuestionResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPExceptionModel"];
                };
            };
        };
    };
}
