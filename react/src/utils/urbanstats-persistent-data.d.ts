/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/juxtastat/friend_request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_friend_request <POST> */
        post: operations["juxtastatFriendRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/unfriend": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_unfriend <POST> */
        post: operations["juxtastatUnfriend"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/todays_score_for": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_todays_score_for <POST> */
        post: operations["juxtastatTodaysScoreFor"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/infinite_results": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_infinite_results <POST> */
        post: operations["juxtastatInfiniteResults"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shorten": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** shorten_request <POST> */
        post: operations["shortenRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lengthen": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** lengthen_request <GET> */
        get: operations["lengthenRequest"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/s": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** s <GET> */
        get: operations["s"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/register_user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_register_user_request <POST> */
        post: operations["juxtastatRegisterUserRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/latest_day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** juxtastat_latest_day_request <GET> */
        get: operations["juxtastatLatestDayRequest"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/retrostat/latest_week": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** retrostat_latest_week_request <GET> */
        get: operations["retrostatLatestWeekRequest"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/store_user_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_store_user_stats_request <POST> */
        post: operations["juxtastatStoreUserStatsRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat_infinite/has_infinite_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_infinite_has_infinite_stats_request <POST> */
        post: operations["juxtastatInfiniteHasInfiniteStatsRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat_infinite/store_user_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** juxtastat_infinite_store_user_stats_request <POST> */
        post: operations["juxtastatInfiniteStoreUserStatsRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/retrostat/store_user_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** retrostat_store_user_stats_request <POST> */
        post: operations["retrostatStoreUserStatsRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/juxtastat/get_per_question_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** juxtastat_get_per_question_stats_request <GET> */
        get: operations["juxtastatGetPerQuestionStatsRequest"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/retrostat/get_per_question_stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** retrostat_get_per_question_stats_request <GET> */
        get: operations["retrostatGetPerQuestionStatsRequest"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Requestee */
        Requestee: {
            /** Requestee */
            requestee: string;
        };
        /** UserHeadersSchema */
        UserHeadersSchema: {
            /** X-User */
            "X-User": string;
            /** X-Secure-Id */
            "X-Secure-Id": string;
        };
        /** EmptyResponse */
        EmptyResponse: Record<string, never>;
        /** ScoreRequest */
        ScoreRequest: {
            /** Requesters */
            requesters: string[];
            /** Date */
            date: number;
            quiz_kind: components["schemas"]["QuizKind"];
        };
        /**
         * QuizKind
         * @enum {string}
         */
        QuizKind: "juxtastat" | "retrostat";
        /** ScoreResponse */
        ScoreResponse: {
            /** Results */
            results: components["schemas"]["Result"][];
        };
        /** Result */
        Result: {
            /** Corrects */
            corrects: boolean[] | null;
            /** Friends */
            friends: boolean;
        };
        /** InfiniteScoreRequest */
        InfiniteScoreRequest: {
            /** Requesters */
            requesters: string[];
            /** Seed */
            seed: string;
            /** Version */
            version: number;
        };
        /** InfiniteScoreResponse */
        InfiniteScoreResponse: {
            /** Results */
            results: components["schemas"]["InfiniteResult"][];
        };
        /** InfiniteResult */
        InfiniteResult: {
            /** Forthisseed */
            forThisSeed: number | null;
            /** Maxscore */
            maxScore: number | null;
            /** Maxscoreseed */
            maxScoreSeed: number | null;
            /** Maxscoreversion */
            maxScoreVersion: number | null;
            /** Friends */
            friends: boolean;
        };
        /** FullText */
        FullText: {
            /** Full Text */
            full_text: string;
        };
        /** Shortened */
        Shortened: {
            /** Shortened */
            shortened: string;
        };
        /** UrbanStatsErrorModel */
        UrbanStatsErrorModel: {
            /** Error */
            error: unknown;
            /** Code */
            code: string | null;
        };
        /** S */
        S: {
            /** C */
            c: string;
        };
        /** RegisterRequest */
        RegisterRequest: {
            /** Domain */
            domain: string;
        };
        /** LatestDayResponse */
        LatestDayResponse: {
            /** Latest Day */
            latest_day: number;
        };
        /** StoreUserStatsRequest */
        StoreUserStatsRequest: {
            /** Day Stats */
            day_stats: [
                number,
                boolean[]
            ][];
        };
        /** HasInfiniteStatsRequest */
        HasInfiniteStatsRequest: {
            /** Seedversions */
            seedVersions: string[];
        };
        /** HasInfiniteStatsResponse */
        HasInfiniteStatsResponse: {
            /** Has */
            has: boolean[];
        };
        /** StoreInfiniteUserStatsRequest */
        StoreInfiniteUserStatsRequest: {
            /** Seed */
            seed: string;
            /** Version */
            version: number;
            /** Corrects */
            corrects: boolean[];
        };
        /** GetPerQuestionJuxtaStatsRequest */
        GetPerQuestionJuxtaStatsRequest: {
            /** Day */
            day: number;
        };
        /** PerQuestionResponse */
        PerQuestionResponse: {
            /** Total */
            total: number;
            /** Per Question */
            per_question: number[];
        };
        /** GetPerQuestionRetroStatsRequest */
        GetPerQuestionRetroStatsRequest: {
            /** Week */
            week: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    juxtastatFriendRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Requestee"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmptyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatUnfriend: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Requestee"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmptyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatTodaysScoreFor: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScoreRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScoreResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatInfiniteResults: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InfiniteScoreRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InfiniteScoreResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    shortenRequest: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FullText"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Shortened"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    lengthenRequest: {
        parameters: {
            query: {
                shortened: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FullText"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UrbanStatsErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    s: {
        parameters: {
            query: {
                c: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Found */
            302: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UrbanStatsErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatRegisterUserRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmptyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatLatestDayRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LatestDayResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    retrostatLatestWeekRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LatestDayResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatStoreUserStatsRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StoreUserStatsRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmptyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatInfiniteHasInfiniteStatsRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HasInfiniteStatsRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HasInfiniteStatsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatInfiniteStoreUserStatsRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StoreInfiniteUserStatsRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmptyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    retrostatStoreUserStatsRequest: {
        parameters: {
            query?: never;
            header: {
                "X-User": string;
                "X-Secure-Id": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StoreUserStatsRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmptyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    juxtastatGetPerQuestionStatsRequest: {
        parameters: {
            query: {
                day: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerQuestionResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    retrostatGetPerQuestionStatsRequest: {
        parameters: {
            query: {
                week: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerQuestionResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
