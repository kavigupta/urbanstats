/**
 * On the test CI, we want to have multiple test runners in parallel.
 *
 * However, pulling down the densitydb repo to run the tests against each time is expensive.
 *
 * So, our strategy will be to serve the local files generated by generate_site.py,
 * and then any files not generated, we'll proxy the request to a CI proxy that has a copy of densitydb.
 */

/* c8 ignore start */
import express from 'express'
import proxy from 'express-http-proxy'
import { z } from 'zod'

export function startProxy(): void {
    const branch = z.string().min(1).parse(process.env.DENSITYDB_BRANCH_NAME)
    const ciProxyOrigin = z.string().min(1).parse(process.env.CI_PROXY_ORIGIN)

    // This is useful for debugging in case the proxy isn't working
    console.warn('Proxy is using branch...', branch)

    const app = express()

    app.use(
        express.static('test/density-db'),
        proxy(ciProxyOrigin, { // Contacts the proxy in react/ci_proxy
            proxyReqOptDecorator(proxyReqOpts) {
                return {
                    ...proxyReqOpts,
                    headers: {
                        ...proxyReqOpts.headers,
                        'x-branch': branch,
                    },
                }
            },
        }),
    )

    app.listen(8000)
}
/* c8 ignore stop */
